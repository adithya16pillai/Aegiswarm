{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/adith/Desktop/Final%20Project/Aegiswarm/aegiswarm/app/frontend/pages/demo.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport '../styles/globals.css';\r\n\r\nexport default function Dashboard() {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  \r\n  // Sample data for the dashboard visualizations\r\n  const mockData = {\r\n    threats: {\r\n      total: 147,\r\n      critical: 12,\r\n      high: 37,\r\n      medium: 54,\r\n      low: 44,\r\n    },\r\n    sources: [\r\n      { name: 'Firewall', count: 428, percentage: 42 },\r\n      { name: 'Endpoint Protection', count: 256, percentage: 25 },\r\n      { name: 'Cloud Services', count: 187, percentage: 18 },\r\n      { name: 'Authentication', count: 98, percentage: 10 },\r\n      { name: 'Other', count: 51, percentage: 5 },\r\n    ],\r\n    threatVectors: [\r\n      { type: 'Malware', count: 48 },\r\n      { type: 'Phishing', count: 36 },\r\n      { type: 'Brute Force', count: 27 },\r\n      { type: 'DDoS', count: 14 },\r\n      { type: 'Insider', count: 11 },\r\n      { type: 'Zero Day', count: 5 },\r\n    ],\r\n    anomalyTypes: [\r\n      { type: 'Traffic Spike', count: 32 },\r\n      { type: 'Auth Failure', count: 45 },\r\n      { type: 'Data Exfiltration', count: 12 },\r\n      { type: 'API Abuse', count: 18 },\r\n      { type: 'Privilege Escalation', count: 7 },\r\n    ],\r\n    alerts: [\r\n      { id: 'ALT-3429', source: 'Endpoint', severity: 'critical', time: '11:42:06', description: 'Multiple failed admin login attempts detected on server EXT-004' },\r\n      { id: 'ALT-3428', source: 'Firewall', severity: 'high', time: '11:38:54', description: 'Unusual outbound data transfer from engineering workstation to external IP' },\r\n      { id: 'ALT-3427', source: 'Cloud', severity: 'critical', time: '11:30:17', description: 'S3 bucket permission change detected with public read access' },\r\n      { id: 'ALT-3426', source: 'Auth', severity: 'medium', time: '11:28:35', description: 'User account accessed from previously unseen location' },\r\n      { id: 'ALT-3425', source: 'Endpoint', severity: 'high', time: '11:20:42', description: 'PowerShell execution with encoded command parameters' },\r\n      { id: 'ALT-3424', source: 'Firewall', severity: 'medium', time: '11:15:20', description: 'Connection attempt to known malware C2 server blocked' },\r\n    ],\r\n    liveData: [\r\n      { id: 'LOG-7825', source: '192.168.1.45', type: 'AUTH', message: 'User login successful', time: '11:42:27', status: 'normal' },\r\n      { id: 'LOG-7824', source: '192.168.1.105', type: 'FIREWALL', message: 'Connection blocked', time: '11:42:21', status: 'blocked' },\r\n      { id: 'LOG-7823', source: '192.168.1.22', type: 'ENDPOINT', message: 'Software installed: Chrome 95.0.4638.69', time: '11:42:14', status: 'normal' },\r\n      { id: 'LOG-7822', source: '192.168.1.88', type: 'API', message: 'Rate limit exceeded', time: '11:42:05', status: 'warning' },\r\n      { id: 'LOG-7821', source: '192.168.1.12', type: 'AUTH', message: 'Failed login attempt', time: '11:41:59', status: 'warning' },\r\n      { id: 'LOG-7820', source: '192.168.1.224', type: 'CLOUD', message: 'New resource created', time: '11:41:48', status: 'normal' },\r\n    ]\r\n  };\r\n\r\n  // Mock MITRE ATT&CK matrix categories\r\n  const mitreCategories = [\r\n    'Initial Access', 'Execution', 'Persistence', 'Privilege Escalation', \r\n    'Defense Evasion', 'Credential Access', 'Discovery', 'Lateral Movement',\r\n    'Collection', 'Command and Control', 'Exfiltration', 'Impact'\r\n  ];\r\n\r\n  // Generate random data for MITRE ATT&CK heatmap\r\n  const mitreTechniques = {};\r\n  mitreCategories.forEach(category => {\r\n    mitreTechniques[category] = Array.from({length: Math.floor(Math.random() * 5) + 2}, (_, i) => ({\r\n      id: `T${Math.floor(1000 + Math.random() * 9000)}`,\r\n      name: `${category} Technique ${i+1}`,\r\n      count: Math.floor(Math.random() * 10),\r\n    }));\r\n  });\r\n  \r\n  // Mock data for top threat countries\r\n  const threatCountries = [\r\n    { code: 'RU', name: 'Russia', count: 1245 },\r\n    { code: 'CN', name: 'China', count: 976 },\r\n    { code: 'US', name: 'United States', count: 724 },\r\n    { code: 'BR', name: 'Brazil', count: 431 },\r\n    { code: 'IN', name: 'India', count: 317 },\r\n    { code: 'KP', name: 'North Korea', count: 276 },\r\n    { code: 'IR', name: 'Iran', count: 203 },\r\n    { code: 'VN', name: 'Vietnam', count: 187 }\r\n  ];\r\n  \r\n  // Add a streaming effect to the live data\r\n  useEffect(() => {\r\n    const newLogInterval = setInterval(() => {\r\n      // In a real app, this would be a WebSocket or SSE connection\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(newLogInterval);\r\n  }, []);\r\n\r\n  // Utility function to generate different bar heights for visualization\r\n  const getBarHeight = (value, max = 100) => {\r\n    return `${Math.min((value / max) * 100, 100)}%`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardContainer\">\r\n      <Head>\r\n        <title>aegiswarm | security dashboard</title>\r\n        <meta name=\"description\" content=\"Real-time security monitoring dashboard\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      {/* Dashboard Sidebar */}\r\n      <aside className={`dashboardSidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n        <div className=\"sidebarHeader\">\r\n          <Link href=\"/\">\r\n            <div className=\"logo\">\r\n              aegis<span className=\"logoHighlight\">warm</span>\r\n            </div>\r\n          </Link>\r\n          <button \r\n            className=\"collapseButton\" \r\n            onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n          >\r\n            {sidebarCollapsed ? '→' : '←'}\r\n          </button>\r\n        </div>\r\n        \r\n        <nav className=\"sidebarNav\">\r\n          <ul className=\"sidebarMenu\">\r\n            <li className={activeTab === 'overview' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('overview')}>\r\n                <span className=\"menuIcon\">📊</span>\r\n                <span className=\"menuText\">Overview</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'threats' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('threats')}>\r\n                <span className=\"menuIcon\">⚠️</span>\r\n                <span className=\"menuText\">Active Threats</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'anomalies' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('anomalies')}>\r\n                <span className=\"menuIcon\">🔍</span>\r\n                <span className=\"menuText\">Anomalies</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'alerts' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('alerts')}>\r\n                <span className=\"menuIcon\">🔔</span>\r\n                <span className=\"menuText\">Alert Queue</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'mitre' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('mitre')}>\r\n                <span className=\"menuIcon\">🎯</span>\r\n                <span className=\"menuText\">MITRE ATT&CK</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'map' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('map')}>\r\n                <span className=\"menuIcon\">🌐</span>\r\n                <span className=\"menuText\">Threat Map</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'logs' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('logs')}>\r\n                <span className=\"menuIcon\">📝</span>\r\n                <span className=\"menuText\">Live Logs</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'settings' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('settings')}>\r\n                <span className=\"menuIcon\">⚙️</span>\r\n                <span className=\"menuText\">Settings</span>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        \r\n        <div className=\"sidebarFooter\">\r\n          <div className=\"systemStatus\">\r\n            <div className=\"statusIndicator green\"></div>\r\n            <span>System Operational</span>\r\n          </div>\r\n          <div className=\"lastUpdated\">\r\n            Last updated: {new Date().toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Main Dashboard Content */}\r\n      <main className=\"dashboardMain\">\r\n        <header className=\"dashboardHeader\">\r\n          <h1>Security Dashboard</h1>\r\n          <div className=\"headerActions\">\r\n            <div className=\"timeRangeSelector\">\r\n              <select defaultValue=\"24h\">\r\n                <option value=\"1h\">Last hour</option>\r\n                <option value=\"6h\">Last 6 hours</option>\r\n                <option value=\"24h\">Last 24 hours</option>\r\n                <option value=\"7d\">Last 7 days</option>\r\n                <option value=\"30d\">Last 30 days</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"searchContainer\">\r\n              <input type=\"text\" placeholder=\"Search logs, alerts, devices...\" />\r\n              <button className=\"searchButton\">🔍</button>\r\n            </div>\r\n            <button className=\"exportButton\">Export</button>\r\n            <div className=\"userProfile\">\r\n              <div className=\"userAvatar\">A</div>\r\n              <div className=\"userName\">Admin</div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Dashboard Overview */}\r\n        {activeTab === 'overview' && (\r\n          <div className=\"dashboardContent\">\r\n            <div className=\"overviewStats\">\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Total Threats</div>\r\n                <div className=\"statValue\">{mockData.threats.total}</div>\r\n                <div className=\"statBreakdown\">\r\n                  <span className=\"criticalTag\">{mockData.threats.critical} critical</span>\r\n                  <span className=\"highTag\">{mockData.threats.high} high</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Anomaly Score</div>\r\n                <div className=\"statValue\">37.8</div>\r\n                <div className=\"statTrend up\">+5.2 from yesterday</div>\r\n              </div>\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Detection Rate</div>\r\n                <div className=\"statValue\">98.2%</div>\r\n                <div className=\"statTrend down\">-0.3% from last week</div>\r\n              </div>\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Logs Processed</div>\r\n                <div className=\"statValue\">3.2M</div>\r\n                <div className=\"statBreakdown\">\r\n                  <span>1,240/sec average</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"dashboardGrid\">\r\n              {/* Live Data Streams */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Live Data Streams</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Filter</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"liveDataStreams\">\r\n                    <div className=\"streamGroup\">\r\n                      <h3>Firewalls</h3>\r\n                      <div className=\"streamVisualization\">\r\n                        <div className=\"streamLine\">\r\n                          {[...Array(50)].map((_, i) => (\r\n                            <div \r\n                              key={i} \r\n                              className=\"streamPulse\" \r\n                              style={{ \r\n                                height: `${Math.max(5, Math.random() * 40)}px`,\r\n                                backgroundColor: `hsl(${220 + Math.random() * 40}deg, 80%, 60%)`\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"streamStats\">\r\n                          <div className=\"streamCount\">1.2k events/min</div>\r\n                          <div className=\"streamChange up\">+8%</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"streamGroup\">\r\n                      <h3>Endpoints</h3>\r\n                      <div className=\"streamVisualization\">\r\n                        <div className=\"streamLine\">\r\n                          {[...Array(50)].map((_, i) => (\r\n                            <div \r\n                              key={i} \r\n                              className=\"streamPulse\" \r\n                              style={{ \r\n                                height: `${Math.max(5, Math.random() * 35)}px`,\r\n                                backgroundColor: `hsl(${120 + Math.random() * 40}deg, 70%, 50%)`\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"streamStats\">\r\n                          <div className=\"streamCount\">756 events/min</div>\r\n                          <div className=\"streamChange\">+2%</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"streamGroup\">\r\n                      <h3>Cloud Services</h3>\r\n                      <div className=\"streamVisualization\">\r\n                        <div className=\"streamLine\">\r\n                          {[...Array(50)].map((_, i) => (\r\n                            <div \r\n                              key={i} \r\n                              className=\"streamPulse\" \r\n                              style={{ \r\n                                height: `${Math.max(5, Math.random() * 50)}px`,\r\n                                backgroundColor: `hsl(${280 + Math.random() * 40}deg, 70%, 65%)`\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"streamStats\">\r\n                          <div className=\"streamCount\">845 events/min</div>\r\n                          <div className=\"streamChange up\">+12%</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Top Sources by Volume */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Top Sources by Volume</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"sourcesChart\">\r\n                    {mockData.sources.map((source, index) => (\r\n                      <div className=\"sourceItem\" key={index}>\r\n                        <div className=\"sourceLabel\">{source.name}</div>\r\n                        <div className=\"sourceBarContainer\">\r\n                          <div \r\n                            className=\"sourceBar\" \r\n                            style={{ width: `${source.percentage}%` }}\r\n                          ></div>\r\n                          <div className=\"sourceValue\">{source.count}</div>\r\n                        </div>\r\n                        <div className=\"sourcePercentage\">{source.percentage}%</div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Active Threats Heatmap */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Active Threats Heatmap</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"threatHeatmap\">\r\n                    <div className=\"heatmapGrid\">\r\n                      {Array.from({ length: 64 }, (_, i) => {\r\n                        const intensity = Math.random();\r\n                        const colorClass = intensity > 0.8 ? 'critical' : \r\n                                           intensity > 0.6 ? 'high' : \r\n                                           intensity > 0.3 ? 'medium' : 'low';\r\n                        return (\r\n                          <div \r\n                            key={i} \r\n                            className={`heatmapCell ${colorClass}`}\r\n                            style={{ opacity: 0.3 + intensity * 0.7 }}\r\n                          ></div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                    <div className=\"heatmapLegend\">\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor low\"></div>\r\n                        <div className=\"legendLabel\">Low</div>\r\n                      </div>\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor medium\"></div>\r\n                        <div className=\"legendLabel\">Medium</div>\r\n                      </div>\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor high\"></div>\r\n                        <div className=\"legendLabel\">High</div>\r\n                      </div>\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor critical\"></div>\r\n                        <div className=\"legendLabel\">Critical</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Top Threat Vectors */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Top Threat Vectors</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"threatVectorsChart\">\r\n                    {mockData.threatVectors.map((vector, index) => (\r\n                      <div className=\"vectorItem\" key={index}>\r\n                        <div className=\"vectorLabel\">{vector.type}</div>\r\n                        <div className=\"vectorBarContainer\">\r\n                          <div \r\n                            className=\"vectorBar\" \r\n                            style={{ width: getBarHeight(vector.count, 50) }}\r\n                          ></div>\r\n                          <div className=\"vectorCount\">{vector.count}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Anomaly Types Distribution */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Anomaly Types Distribution</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"anomalyDistribution\">\r\n                    <div className=\"anomalyChart\">\r\n                      {/* Simplified donut chart representation */}\r\n                      <div className=\"donutChart\">\r\n                        <div className=\"donutSegment type1\" style={{ transform: 'rotate(0deg)', clipPath: 'polygon(50% 50%, 50% 0%, 100% 0%, 100% 100%, 50% 100%)' }}></div>\r\n                        <div className=\"donutSegment type2\" style={{ transform: 'rotate(115deg)', clipPath: 'polygon(50% 50%, 50% 0%, 100% 0%, 100% 55%, 75% 75%)' }}></div>\r\n                        <div className=\"donutSegment type3\" style={{ transform: 'rotate(180deg)', clipPath: 'polygon(50% 50%, 50% 0%, 85% 0%, 85% 50%)' }}></div>\r\n                        <div className=\"donutSegment type4\" style={{ transform: 'rotate(230deg)', clipPath: 'polygon(50% 50%, 50% 0%, 75% 0%, 60% 60%)' }}></div>\r\n                        <div className=\"donutSegment type5\" style={{ transform: 'rotate(305deg)', clipPath: 'polygon(50% 50%, 50% 0%, 55% 0%, 55% 40%)' }}></div>\r\n                        <div className=\"donutHole\"></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"anomalyLegend\">\r\n                      {mockData.anomalyTypes.map((anomaly, index) => (\r\n                        <div className=\"legendItem\" key={index}>\r\n                          <div className={`legendColor type${index + 1}`}></div>\r\n                          <div className=\"legendLabel\">{anomaly.type}</div>\r\n                          <div className=\"legendValue\">{anomaly.count}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* MITRE ATT&CK Matrix View (simplified) */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>MITRE ATT&CK Matrix</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Expand</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"mitreMatrixContainer\">\r\n                    <div className=\"mitreMatrix\">\r\n                      {mitreCategories.slice(0, 6).map((category, index) => (\r\n                        <div className=\"mitreCategory\" key={index}>\r\n                          <div className=\"mitreCategoryName\">{category}</div>\r\n                          <div className=\"mitreTechniques\">\r\n                            {mitreTechniques[category].slice(0, 3).map((technique, tIndex) => (\r\n                              <div \r\n                                key={tIndex} \r\n                                className={`mitreTechnique ${\r\n                                  technique.count > 7 ? 'critical' : \r\n                                  technique.count > 4 ? 'high' : \r\n                                  technique.count > 0 ? 'medium' : 'none'\r\n                                }`}\r\n                              >\r\n                                <div className=\"techniqueId\">{technique.id}</div>\r\n                                <div className=\"techniqueName\">{technique.name}</div>\r\n                                {technique.count > 0 && <div className=\"techniqueCount\">{technique.count}</div>}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"matrixShowMore\">\r\n                      <button>Show all categories</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Prioritized Alerts Queue */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Prioritized Alerts Queue</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">View All</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"alertsQueue\">\r\n                    <table className=\"alertsTable\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>ID</th>\r\n                          <th>Source</th>\r\n                          <th>Severity</th>\r\n                          <th>Time</th>\r\n                          <th>Description</th>\r\n                          <th>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {mockData.alerts.map((alert, index) => (\r\n                          <tr key={index} className={alert.severity}>\r\n                            <td>{alert.id}</td>\r\n                            <td>{alert.source}</td>\r\n                            <td>\r\n                              <span className={`alertSeverity ${alert.severity}`}>\r\n                                {alert.severity}\r\n                              </span>\r\n                            </td>\r\n                            <td>{alert.time}</td>\r\n                            <td>{alert.description}</td>\r\n                            <td>\r\n                              <button className=\"tableActionButton\">View</button>\r\n                              <button className=\"tableActionButton\">Resolve</button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Threat Landscape Map */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Threat Landscape Map</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Fullscreen</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"threatMapContainer\">\r\n                    <div className=\"threatMap\">\r\n                      {/* This would be a real map with D3 or Leaflet in a production app */}\r\n                      <div className=\"worldMapPlaceholder\">\r\n                        <div className=\"worldMapOutline\"></div>\r\n                        {threatCountries.map((country, index) => (\r\n                          <div \r\n                            key={index} \r\n                            className=\"threatPoint\" \r\n                            style={{\r\n                              top: `${20 + Math.random() * 60}%`, \r\n                              left: `${10 + Math.random() * 80}%`,\r\n                              width: `${Math.max(6, Math.min(20, country.count / 100))}px`, \r\n                              height: `${Math.max(6, Math.min(20, country.count / 100))}px`\r\n                            }}\r\n                          ></div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"threatMapLegend\">\r\n                      <h4>Top Source Countries</h4>\r\n                      <div className=\"threatCountryList\">\r\n                        {threatCountries.slice(0, 5).map((country, index) => (\r\n                          <div className=\"threatCountry\" key={index}>\r\n                            <span className=\"countryCode\">{country.code}</span>\r\n                            <span className=\"countryName\">{country.name}</span>\r\n                            <span className=\"countryCount\">{country.count}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {activeTab === 'logs' && (\r\n          <div className=\"dashboardContent\">\r\n            <div className=\"logsContainer\">\r\n              <div className=\"logsHeader\">\r\n                <h2>Live Log Stream</h2>\r\n                <div className=\"logsFilter\">\r\n                  <select defaultValue=\"all\">\r\n                    <option value=\"all\">All Sources</option>\r\n                    <option value=\"firewall\">Firewall</option>\r\n                    <option value=\"endpoint\">Endpoint</option>\r\n                    <option value=\"cloud\">Cloud</option>\r\n                    <option value=\"auth\">Authentication</option>\r\n                  </select>\r\n                  <select defaultValue=\"all\">\r\n                    <option value=\"all\">All Types</option>\r\n                    <option value=\"warning\">Warnings</option>\r\n                    <option value=\"error\">Errors</option>\r\n                    <option value=\"info\">Info</option>\r\n                    <option value=\"blocked\">Blocked</option>\r\n                  </select>\r\n                  <button className=\"filterButton\">Apply</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"logsList\">\r\n                {mockData.liveData.map((log, index) => (\r\n                  <div key={index} className={`logEntry ${log.status}`}>\r\n                    <div className=\"logTime\">{log.time}</div>\r\n                    <div className=\"logSource\">{log.source}</div>\r\n                    <div className={`logType ${log.type.toLowerCase()}`}>{log.type}</div>\r\n                    <div className=\"logMessage\">{log.message}</div>\r\n                    <div className={`logStatus ${log.status}`}>{log.status}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"logsPagination\">\r\n                <button className=\"paginationButton\">Load More</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Placeholder content for other tabs */}\r\n        {activeTab !== 'overview' && activeTab !== 'logs' && (\r\n          <div className=\"dashboardContent\">\r\n            <div className=\"placeholderTab\">\r\n              <h2>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)} Tab</h2>\r\n              <p>This tab's detailed content would be implemented in a production version.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}