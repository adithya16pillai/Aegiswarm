{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void;\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: \"turbopack-connected\";\r\n    }\r\n  | {\r\n      type: \"turbopack-message\";\r\n      data: Record<string, any>;\r\n    };\r\n\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\r\n  sendMessage: SendMessage;\r\n  onUpdateError: (err: unknown) => void;\r\n};\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case \"turbopack-connected\":\r\n        handleSocketConnected(sendMessage);\r\n        break;\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage);\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage);\r\n          }\r\n          applyAggregatedUpdates();\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            \"[Fast Refresh] performing full reload\\n\\n\" +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\r\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\r\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\r\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\r\n          );\r\n          onUpdateError(e);\r\n          location.reload();\r\n        }\r\n        break;\r\n    }\r\n  });\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error(\"A separate HMR handler was already registered\");\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    },\r\n  };\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>;\r\n  unsubscribe: () => void;\r\n};\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message));\r\n}\r\n\r\ntype ResourceKey = string;\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  });\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: \"turbopack-subscribe\",\r\n    ...resource,\r\n  });\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: \"turbopack-unsubscribe\",\r\n      ...resource,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key));\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map();\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  let aggregated = chunkListsWithPendingUpdates.get(key);\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    );\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg);\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return;\r\n  hooks.beforeRefresh();\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg);\r\n  }\r\n  chunkListsWithPendingUpdates.clear();\r\n  finalizeUpdate();\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks;\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks;\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks;\r\n  }\r\n\r\n  let merged;\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged;\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0];\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        );\r\n      }\r\n\r\n      merged = [update];\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged;\r\n  }\r\n\r\n  return {\r\n    type: \"ChunkListUpdate\",\r\n    chunks,\r\n    merged,\r\n  };\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\r\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"partial\") {\r\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  if (updateB.type === \"partial\") {\r\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\r\n\r\n  return {\r\n    type: \"EcmascriptMergedUpdate\",\r\n    entries,\r\n    chunks,\r\n  };\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB };\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB;\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA;\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      );\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\r\n    // These two completely cancel each other out.\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\r\n    const added = [];\r\n    const deleted = [];\r\n    const deletedModules = new Set(updateA.modules ?? []);\r\n    const addedModules = new Set(updateB.modules ?? []);\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId);\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId);\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added,\r\n      deleted,\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ]);\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ]);\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId);\r\n    }\r\n\r\n    return {\r\n      type: \"added\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? []);\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"deleted\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`);\r\n}\r\n\r\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length;\r\n  const bI = list.indexOf(b) + 1 || list.length;\r\n  return aI - bI;\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\r\n\r\nfunction emitIssues() {\r\n  const issues = [];\r\n  const deduplicationSet = new Set();\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\r\n\r\n      issues.push(chunkIssue);\r\n      deduplicationSet.add(chunkIssue.formatted);\r\n    }\r\n  }\r\n\r\n  sortIssues(issues);\r\n\r\n  hooks.issues(issues);\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource);\r\n  let hasCriticalIssues = false;\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true;\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues);\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key);\r\n  }\r\n\r\n  emitIssues();\r\n\r\n  return hasCriticalIssues;\r\n}\r\n\r\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\r\nconst CATEGORY_ORDER = [\r\n  \"parse\",\r\n  \"resolve\",\r\n  \"code generation\",\r\n  \"rendering\",\r\n  \"typescript\",\r\n  \"other\",\r\n];\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\r\n    if (first !== 0) return first;\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\r\n  });\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n};\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks);\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues);\r\n\r\n  handleIssues(msg);\r\n\r\n  switch (msg.type) {\r\n    case \"issues\":\r\n      // issues are already handled\r\n      break;\r\n    case \"partial\":\r\n      // aggregate updates\r\n      aggregateUpdates(msg);\r\n      break;\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\r\n      if (runHooks) hooks.beforeRefresh();\r\n      triggerUpdate(msg);\r\n      if (runHooks) finalizeUpdate();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh();\r\n  hooks.buildOk();\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB();\r\n    globalThis.__NEXT_HMR_CB = null;\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  );\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource);\r\n  let callbackSet: UpdateCallbackSet;\r\n  const existingCallbackSet = updateCallbackSets.get(key);\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    };\r\n    updateCallbackSets.set(key, callbackSet);\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback);\r\n    callbackSet = existingCallbackSet;\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback);\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe();\r\n      updateCallbackSets.delete(key);\r\n    }\r\n  };\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  const callbackSet = updateCallbackSets.get(key);\r\n  if (!callbackSet) {\r\n    return;\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg);\r\n  }\r\n\r\n  if (msg.type === \"notFound\") {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/adith/Desktop/Final%20Project/Aegiswarm/aegiswarm/app/frontend/pages/demo.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport '../styles/globals.css';\r\n\r\nexport default function Dashboard() {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  \r\n  // Sample data for the dashboard visualizations\r\n  const mockData = {\r\n    threats: {\r\n      total: 147,\r\n      critical: 12,\r\n      high: 37,\r\n      medium: 54,\r\n      low: 44,\r\n    },\r\n    sources: [\r\n      { name: 'Firewall', count: 428, percentage: 42 },\r\n      { name: 'Endpoint Protection', count: 256, percentage: 25 },\r\n      { name: 'Cloud Services', count: 187, percentage: 18 },\r\n      { name: 'Authentication', count: 98, percentage: 10 },\r\n      { name: 'Other', count: 51, percentage: 5 },\r\n    ],\r\n    threatVectors: [\r\n      { type: 'Malware', count: 48 },\r\n      { type: 'Phishing', count: 36 },\r\n      { type: 'Brute Force', count: 27 },\r\n      { type: 'DDoS', count: 14 },\r\n      { type: 'Insider', count: 11 },\r\n      { type: 'Zero Day', count: 5 },\r\n    ],\r\n    anomalyTypes: [\r\n      { type: 'Traffic Spike', count: 32 },\r\n      { type: 'Auth Failure', count: 45 },\r\n      { type: 'Data Exfiltration', count: 12 },\r\n      { type: 'API Abuse', count: 18 },\r\n      { type: 'Privilege Escalation', count: 7 },\r\n    ],\r\n    alerts: [\r\n      { id: 'ALT-3429', source: 'Endpoint', severity: 'critical', time: '11:42:06', description: 'Multiple failed admin login attempts detected on server EXT-004' },\r\n      { id: 'ALT-3428', source: 'Firewall', severity: 'high', time: '11:38:54', description: 'Unusual outbound data transfer from engineering workstation to external IP' },\r\n      { id: 'ALT-3427', source: 'Cloud', severity: 'critical', time: '11:30:17', description: 'S3 bucket permission change detected with public read access' },\r\n      { id: 'ALT-3426', source: 'Auth', severity: 'medium', time: '11:28:35', description: 'User account accessed from previously unseen location' },\r\n      { id: 'ALT-3425', source: 'Endpoint', severity: 'high', time: '11:20:42', description: 'PowerShell execution with encoded command parameters' },\r\n      { id: 'ALT-3424', source: 'Firewall', severity: 'medium', time: '11:15:20', description: 'Connection attempt to known malware C2 server blocked' },\r\n    ],\r\n    liveData: [\r\n      { id: 'LOG-7825', source: '192.168.1.45', type: 'AUTH', message: 'User login successful', time: '11:42:27', status: 'normal' },\r\n      { id: 'LOG-7824', source: '192.168.1.105', type: 'FIREWALL', message: 'Connection blocked', time: '11:42:21', status: 'blocked' },\r\n      { id: 'LOG-7823', source: '192.168.1.22', type: 'ENDPOINT', message: 'Software installed: Chrome 95.0.4638.69', time: '11:42:14', status: 'normal' },\r\n      { id: 'LOG-7822', source: '192.168.1.88', type: 'API', message: 'Rate limit exceeded', time: '11:42:05', status: 'warning' },\r\n      { id: 'LOG-7821', source: '192.168.1.12', type: 'AUTH', message: 'Failed login attempt', time: '11:41:59', status: 'warning' },\r\n      { id: 'LOG-7820', source: '192.168.1.224', type: 'CLOUD', message: 'New resource created', time: '11:41:48', status: 'normal' },\r\n    ]\r\n  };\r\n\r\n  // Mock MITRE ATT&CK matrix categories\r\n  const mitreCategories = [\r\n    'Initial Access', 'Execution', 'Persistence', 'Privilege Escalation', \r\n    'Defense Evasion', 'Credential Access', 'Discovery', 'Lateral Movement',\r\n    'Collection', 'Command and Control', 'Exfiltration', 'Impact'\r\n  ];\r\n\r\n  // Generate random data for MITRE ATT&CK heatmap\r\n  const mitreTechniques = {};\r\n  mitreCategories.forEach(category => {\r\n    mitreTechniques[category] = Array.from({length: Math.floor(Math.random() * 5) + 2}, (_, i) => ({\r\n      id: `T${Math.floor(1000 + Math.random() * 9000)}`,\r\n      name: `${category} Technique ${i+1}`,\r\n      count: Math.floor(Math.random() * 10),\r\n    }));\r\n  });\r\n  \r\n  // Mock data for top threat countries\r\n  const threatCountries = [\r\n    { code: 'RU', name: 'Russia', count: 1245 },\r\n    { code: 'CN', name: 'China', count: 976 },\r\n    { code: 'US', name: 'United States', count: 724 },\r\n    { code: 'BR', name: 'Brazil', count: 431 },\r\n    { code: 'IN', name: 'India', count: 317 },\r\n    { code: 'KP', name: 'North Korea', count: 276 },\r\n    { code: 'IR', name: 'Iran', count: 203 },\r\n    { code: 'VN', name: 'Vietnam', count: 187 }\r\n  ];\r\n  \r\n  // Add a streaming effect to the live data\r\n  useEffect(() => {\r\n    const newLogInterval = setInterval(() => {\r\n      // In a real app, this would be a WebSocket or SSE connection\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(newLogInterval);\r\n  }, []);\r\n\r\n  // Utility function to generate different bar heights for visualization\r\n  const getBarHeight = (value, max = 100) => {\r\n    return `${Math.min((value / max) * 100, 100)}%`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardContainer\">\r\n      <Head>\r\n        <title>aegiswarm | security dashboard</title>\r\n        <meta name=\"description\" content=\"Real-time security monitoring dashboard\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      {/* Dashboard Sidebar */}\r\n      <aside className={`dashboardSidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n        <div className=\"sidebarHeader\">\r\n          <Link href=\"/\">\r\n            <div className=\"logo\">\r\n              aegis<span className=\"logoHighlight\">warm</span>\r\n            </div>\r\n          </Link>\r\n          <button \r\n            className=\"collapseButton\" \r\n            onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n          >\r\n            {sidebarCollapsed ? '→' : '←'}\r\n          </button>\r\n        </div>\r\n        \r\n        <nav className=\"sidebarNav\">\r\n          <ul className=\"sidebarMenu\">\r\n            <li className={activeTab === 'overview' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('overview')}>\r\n                <span className=\"menuIcon\">📊</span>\r\n                <span className=\"menuText\">Overview</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'threats' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('threats')}>\r\n                <span className=\"menuIcon\">⚠️</span>\r\n                <span className=\"menuText\">Active Threats</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'anomalies' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('anomalies')}>\r\n                <span className=\"menuIcon\">🔍</span>\r\n                <span className=\"menuText\">Anomalies</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'alerts' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('alerts')}>\r\n                <span className=\"menuIcon\">🔔</span>\r\n                <span className=\"menuText\">Alert Queue</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'mitre' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('mitre')}>\r\n                <span className=\"menuIcon\">🎯</span>\r\n                <span className=\"menuText\">MITRE ATT&CK</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'map' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('map')}>\r\n                <span className=\"menuIcon\">🌐</span>\r\n                <span className=\"menuText\">Threat Map</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'logs' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('logs')}>\r\n                <span className=\"menuIcon\">📝</span>\r\n                <span className=\"menuText\">Live Logs</span>\r\n              </button>\r\n            </li>\r\n            <li className={activeTab === 'settings' ? 'active' : ''}>\r\n              <button onClick={() => setActiveTab('settings')}>\r\n                <span className=\"menuIcon\">⚙️</span>\r\n                <span className=\"menuText\">Settings</span>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        \r\n        <div className=\"sidebarFooter\">\r\n          <div className=\"systemStatus\">\r\n            <div className=\"statusIndicator green\"></div>\r\n            <span>System Operational</span>\r\n          </div>\r\n          <div className=\"lastUpdated\">\r\n            Last updated: {new Date().toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Main Dashboard Content */}\r\n      <main className=\"dashboardMain\">\r\n        <header className=\"dashboardHeader\">\r\n          <h1>Security Dashboard</h1>\r\n          <div className=\"headerActions\">\r\n            <div className=\"timeRangeSelector\">\r\n              <select defaultValue=\"24h\">\r\n                <option value=\"1h\">Last hour</option>\r\n                <option value=\"6h\">Last 6 hours</option>\r\n                <option value=\"24h\">Last 24 hours</option>\r\n                <option value=\"7d\">Last 7 days</option>\r\n                <option value=\"30d\">Last 30 days</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"searchContainer\">\r\n              <input type=\"text\" placeholder=\"Search logs, alerts, devices...\" />\r\n              <button className=\"searchButton\">🔍</button>\r\n            </div>\r\n            <button className=\"exportButton\">Export</button>\r\n            <div className=\"userProfile\">\r\n              <div className=\"userAvatar\">A</div>\r\n              <div className=\"userName\">Admin</div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Dashboard Overview */}\r\n        {activeTab === 'overview' && (\r\n          <div className=\"dashboardContent\">\r\n            <div className=\"overviewStats\">\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Total Threats</div>\r\n                <div className=\"statValue\">{mockData.threats.total}</div>\r\n                <div className=\"statBreakdown\">\r\n                  <span className=\"criticalTag\">{mockData.threats.critical} critical</span>\r\n                  <span className=\"highTag\">{mockData.threats.high} high</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Anomaly Score</div>\r\n                <div className=\"statValue\">37.8</div>\r\n                <div className=\"statTrend up\">+5.2 from yesterday</div>\r\n              </div>\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Detection Rate</div>\r\n                <div className=\"statValue\">98.2%</div>\r\n                <div className=\"statTrend down\">-0.3% from last week</div>\r\n              </div>\r\n              <div className=\"statCard\">\r\n                <div className=\"statTitle\">Logs Processed</div>\r\n                <div className=\"statValue\">3.2M</div>\r\n                <div className=\"statBreakdown\">\r\n                  <span>1,240/sec average</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"dashboardGrid\">\r\n              {/* Live Data Streams */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Live Data Streams</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Filter</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"liveDataStreams\">\r\n                    <div className=\"streamGroup\">\r\n                      <h3>Firewalls</h3>\r\n                      <div className=\"streamVisualization\">\r\n                        <div className=\"streamLine\">\r\n                          {[...Array(50)].map((_, i) => (\r\n                            <div \r\n                              key={i} \r\n                              className=\"streamPulse\" \r\n                              style={{ \r\n                                height: `${Math.max(5, Math.random() * 40)}px`,\r\n                                backgroundColor: `hsl(${220 + Math.random() * 40}deg, 80%, 60%)`\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"streamStats\">\r\n                          <div className=\"streamCount\">1.2k events/min</div>\r\n                          <div className=\"streamChange up\">+8%</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"streamGroup\">\r\n                      <h3>Endpoints</h3>\r\n                      <div className=\"streamVisualization\">\r\n                        <div className=\"streamLine\">\r\n                          {[...Array(50)].map((_, i) => (\r\n                            <div \r\n                              key={i} \r\n                              className=\"streamPulse\" \r\n                              style={{ \r\n                                height: `${Math.max(5, Math.random() * 35)}px`,\r\n                                backgroundColor: `hsl(${120 + Math.random() * 40}deg, 70%, 50%)`\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"streamStats\">\r\n                          <div className=\"streamCount\">756 events/min</div>\r\n                          <div className=\"streamChange\">+2%</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"streamGroup\">\r\n                      <h3>Cloud Services</h3>\r\n                      <div className=\"streamVisualization\">\r\n                        <div className=\"streamLine\">\r\n                          {[...Array(50)].map((_, i) => (\r\n                            <div \r\n                              key={i} \r\n                              className=\"streamPulse\" \r\n                              style={{ \r\n                                height: `${Math.max(5, Math.random() * 50)}px`,\r\n                                backgroundColor: `hsl(${280 + Math.random() * 40}deg, 70%, 65%)`\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"streamStats\">\r\n                          <div className=\"streamCount\">845 events/min</div>\r\n                          <div className=\"streamChange up\">+12%</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Top Sources by Volume */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Top Sources by Volume</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"sourcesChart\">\r\n                    {mockData.sources.map((source, index) => (\r\n                      <div className=\"sourceItem\" key={index}>\r\n                        <div className=\"sourceLabel\">{source.name}</div>\r\n                        <div className=\"sourceBarContainer\">\r\n                          <div \r\n                            className=\"sourceBar\" \r\n                            style={{ width: `${source.percentage}%` }}\r\n                          ></div>\r\n                          <div className=\"sourceValue\">{source.count}</div>\r\n                        </div>\r\n                        <div className=\"sourcePercentage\">{source.percentage}%</div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Active Threats Heatmap */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Active Threats Heatmap</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"threatHeatmap\">\r\n                    <div className=\"heatmapGrid\">\r\n                      {Array.from({ length: 64 }, (_, i) => {\r\n                        const intensity = Math.random();\r\n                        const colorClass = intensity > 0.8 ? 'critical' : \r\n                                           intensity > 0.6 ? 'high' : \r\n                                           intensity > 0.3 ? 'medium' : 'low';\r\n                        return (\r\n                          <div \r\n                            key={i} \r\n                            className={`heatmapCell ${colorClass}`}\r\n                            style={{ opacity: 0.3 + intensity * 0.7 }}\r\n                          ></div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                    <div className=\"heatmapLegend\">\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor low\"></div>\r\n                        <div className=\"legendLabel\">Low</div>\r\n                      </div>\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor medium\"></div>\r\n                        <div className=\"legendLabel\">Medium</div>\r\n                      </div>\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor high\"></div>\r\n                        <div className=\"legendLabel\">High</div>\r\n                      </div>\r\n                      <div className=\"legendItem\">\r\n                        <div className=\"legendColor critical\"></div>\r\n                        <div className=\"legendLabel\">Critical</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Top Threat Vectors */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Top Threat Vectors</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"threatVectorsChart\">\r\n                    {mockData.threatVectors.map((vector, index) => (\r\n                      <div className=\"vectorItem\" key={index}>\r\n                        <div className=\"vectorLabel\">{vector.type}</div>\r\n                        <div className=\"vectorBarContainer\">\r\n                          <div \r\n                            className=\"vectorBar\" \r\n                            style={{ width: getBarHeight(vector.count, 50) }}\r\n                          ></div>\r\n                          <div className=\"vectorCount\">{vector.count}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Anomaly Types Distribution */}\r\n              <div className=\"dashboardCard\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Anomaly Types Distribution</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Details</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"anomalyDistribution\">\r\n                    <div className=\"anomalyChart\">\r\n                      {/* Simplified donut chart representation */}\r\n                      <div className=\"donutChart\">\r\n                        <div className=\"donutSegment type1\" style={{ transform: 'rotate(0deg)', clipPath: 'polygon(50% 50%, 50% 0%, 100% 0%, 100% 100%, 50% 100%)' }}></div>\r\n                        <div className=\"donutSegment type2\" style={{ transform: 'rotate(115deg)', clipPath: 'polygon(50% 50%, 50% 0%, 100% 0%, 100% 55%, 75% 75%)' }}></div>\r\n                        <div className=\"donutSegment type3\" style={{ transform: 'rotate(180deg)', clipPath: 'polygon(50% 50%, 50% 0%, 85% 0%, 85% 50%)' }}></div>\r\n                        <div className=\"donutSegment type4\" style={{ transform: 'rotate(230deg)', clipPath: 'polygon(50% 50%, 50% 0%, 75% 0%, 60% 60%)' }}></div>\r\n                        <div className=\"donutSegment type5\" style={{ transform: 'rotate(305deg)', clipPath: 'polygon(50% 50%, 50% 0%, 55% 0%, 55% 40%)' }}></div>\r\n                        <div className=\"donutHole\"></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"anomalyLegend\">\r\n                      {mockData.anomalyTypes.map((anomaly, index) => (\r\n                        <div className=\"legendItem\" key={index}>\r\n                          <div className={`legendColor type${index + 1}`}></div>\r\n                          <div className=\"legendLabel\">{anomaly.type}</div>\r\n                          <div className=\"legendValue\">{anomaly.count}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* MITRE ATT&CK Matrix View (simplified) */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>MITRE ATT&CK Matrix</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Expand</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"mitreMatrixContainer\">\r\n                    <div className=\"mitreMatrix\">\r\n                      {mitreCategories.slice(0, 6).map((category, index) => (\r\n                        <div className=\"mitreCategory\" key={index}>\r\n                          <div className=\"mitreCategoryName\">{category}</div>\r\n                          <div className=\"mitreTechniques\">\r\n                            {mitreTechniques[category].slice(0, 3).map((technique, tIndex) => (\r\n                              <div \r\n                                key={tIndex} \r\n                                className={`mitreTechnique ${\r\n                                  technique.count > 7 ? 'critical' : \r\n                                  technique.count > 4 ? 'high' : \r\n                                  technique.count > 0 ? 'medium' : 'none'\r\n                                }`}\r\n                              >\r\n                                <div className=\"techniqueId\">{technique.id}</div>\r\n                                <div className=\"techniqueName\">{technique.name}</div>\r\n                                {technique.count > 0 && <div className=\"techniqueCount\">{technique.count}</div>}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"matrixShowMore\">\r\n                      <button>Show all categories</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Prioritized Alerts Queue */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Prioritized Alerts Queue</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">View All</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"alertsQueue\">\r\n                    <table className=\"alertsTable\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>ID</th>\r\n                          <th>Source</th>\r\n                          <th>Severity</th>\r\n                          <th>Time</th>\r\n                          <th>Description</th>\r\n                          <th>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {mockData.alerts.map((alert, index) => (\r\n                          <tr key={index} className={alert.severity}>\r\n                            <td>{alert.id}</td>\r\n                            <td>{alert.source}</td>\r\n                            <td>\r\n                              <span className={`alertSeverity ${alert.severity}`}>\r\n                                {alert.severity}\r\n                              </span>\r\n                            </td>\r\n                            <td>{alert.time}</td>\r\n                            <td>{alert.description}</td>\r\n                            <td>\r\n                              <button className=\"tableActionButton\">View</button>\r\n                              <button className=\"tableActionButton\">Resolve</button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Threat Landscape Map */}\r\n              <div className=\"dashboardCard wide\">\r\n                <div className=\"cardHeader\">\r\n                  <h2>Threat Landscape Map</h2>\r\n                  <div className=\"cardActions\">\r\n                    <button className=\"cardAction\">Fullscreen</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cardContent\">\r\n                  <div className=\"threatMapContainer\">\r\n                    <div className=\"threatMap\">\r\n                      {/* This would be a real map with D3 or Leaflet in a production app */}\r\n                      <div className=\"worldMapPlaceholder\">\r\n                        <div className=\"worldMapOutline\"></div>\r\n                        {threatCountries.map((country, index) => (\r\n                          <div \r\n                            key={index} \r\n                            className=\"threatPoint\" \r\n                            style={{\r\n                              top: `${20 + Math.random() * 60}%`, \r\n                              left: `${10 + Math.random() * 80}%`,\r\n                              width: `${Math.max(6, Math.min(20, country.count / 100))}px`, \r\n                              height: `${Math.max(6, Math.min(20, country.count / 100))}px`\r\n                            }}\r\n                          ></div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"threatMapLegend\">\r\n                      <h4>Top Source Countries</h4>\r\n                      <div className=\"threatCountryList\">\r\n                        {threatCountries.slice(0, 5).map((country, index) => (\r\n                          <div className=\"threatCountry\" key={index}>\r\n                            <span className=\"countryCode\">{country.code}</span>\r\n                            <span className=\"countryName\">{country.name}</span>\r\n                            <span className=\"countryCount\">{country.count}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {activeTab === 'logs' && (\r\n          <div className=\"dashboardContent\">\r\n            <div className=\"logsContainer\">\r\n              <div className=\"logsHeader\">\r\n                <h2>Live Log Stream</h2>\r\n                <div className=\"logsFilter\">\r\n                  <select defaultValue=\"all\">\r\n                    <option value=\"all\">All Sources</option>\r\n                    <option value=\"firewall\">Firewall</option>\r\n                    <option value=\"endpoint\">Endpoint</option>\r\n                    <option value=\"cloud\">Cloud</option>\r\n                    <option value=\"auth\">Authentication</option>\r\n                  </select>\r\n                  <select defaultValue=\"all\">\r\n                    <option value=\"all\">All Types</option>\r\n                    <option value=\"warning\">Warnings</option>\r\n                    <option value=\"error\">Errors</option>\r\n                    <option value=\"info\">Info</option>\r\n                    <option value=\"blocked\">Blocked</option>\r\n                  </select>\r\n                  <button className=\"filterButton\">Apply</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"logsList\">\r\n                {mockData.liveData.map((log, index) => (\r\n                  <div key={index} className={`logEntry ${log.status}`}>\r\n                    <div className=\"logTime\">{log.time}</div>\r\n                    <div className=\"logSource\">{log.source}</div>\r\n                    <div className={`logType ${log.type.toLowerCase()}`}>{log.type}</div>\r\n                    <div className=\"logMessage\">{log.message}</div>\r\n                    <div className={`logStatus ${log.status}`}>{log.status}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"logsPagination\">\r\n                <button className=\"paginationButton\">Load More</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Placeholder content for other tabs */}\r\n        {activeTab !== 'overview' && activeTab !== 'logs' && (\r\n          <div className=\"dashboardContent\">\r\n            <div className=\"placeholderTab\">\r\n              <h2>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)} Tab</h2>\r\n              <p>This tab's detailed content would be implemented in a production version.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3070, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/demo\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}